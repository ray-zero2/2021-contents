{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/webGl/Mouse.js","webpack:///./js/webGl/Camera.js","webpack:///./js/utils/MathFunc.js","webpack:///./js/webGl/Cow.js","webpack:///./shader/cow/vertex.vert","webpack:///./shader/cow/fragment.frag","webpack:///./js/webGl/BackGround.js","webpack:///./shader/background/vertex.vert","webpack:///./shader/background/fragment.frag","webpack:///./js/webGl/WebGlContents.js","webpack:///./js/index.js","webpack:///./js/webGl/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Mouse","resolution","this","position","Vector2","start","lastStart","lastPosition","isTouched","isDumping","canHover","resolutionX","x","resolutionY","y","transformedX","transformedY","transformedPosition","clampScalar","event","preventDefault","touches","clientX","clientY","set","console","log","normalizedDeviceCoord","transformToNormalizedDeviceCoord","_x","_y","Camera","options","fov","aspect","near","far","time","canControl","canvas","controls","OrbitControls","enableDamping","dampingFactor","lookAt","THREE","updateProjectionMatrix","deltaTime","update","MathFunc","min","max","Math","Cow","geometry","textures","isActive","noiseTexture","noise","material","createMaterial","cow","createAttribute","computeVertexNormals","elementsNeedUpdate","rotateY","PI","add","getAttribute","array","center","delay","x1","y1","z1","x2","y2","z2","centerX","centerY","centerZ","delayValue","random","setAttribute","texture","vertexShader","fragmentShader","uniforms","BackGround","isTurnedOn","side","WebGlContents","renderer","alpha","antialias","setPixelRatio","devicePixelRatio","setClearColor","setSize","scene","camera","background","fetchObjects","geometries","wrapS","wrapT","init","textureLoader","objLoader","OBJLoader2","Promise","all","loadAsync","then","response","children","render","e","resize","document","querySelector","Error","body","clientWidth","innerHeight","clock","mouse","webGlContent","getDelta","requestAnimationFrame","animate","addEventListener","load","classList","remove"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([113,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Vector2 } from 'three';\n\nexport default class Mouse {\n  /**\n   *\n   * @param {THRE.Vector2} position\n   * @param {THREE.Vector2} resolution\n   * @returns {THREE.Vector2} 正規化デバイス座標系に変換した座標\n   */\n  static transformToNormalizedDeviceCoord(position, resolution) {\n    const resolutionX = resolution.x;\n    const resolutionY = resolution.y;\n    if (resolutionX === 0 || resolutionY === 0) return new Vector2(0, 0);\n\n    const positionX = position.x;\n    const positionY = position.y;\n\n    const transformedX = positionX / (resolutionX / 2) - 1;\n    const transformedY = positionY / (resolutionY / 2) - 1;\n\n    const transformedPosition = new Vector2(transformedX, -transformedY);\n    transformedPosition.clampScalar(-1, 1);\n    return transformedPosition;\n  }\n\n  constructor(resolution) {\n    this.resolution = resolution;\n    this.position = new Vector2();\n    this.start = new Vector2();\n    this.lastStart = new Vector2();\n    this.lastPosition = new Vector2();\n    this.isTouched = false;\n    this.isDumping = false;\n    this.canHover = false;\n  }\n\n  touchStart(event) {\n    if (!('touches' in event)) event.preventDefault();\n\n    this.isTouched = true;\n  }\n\n  touchMove(event) {\n    if (!this.canHover && !this.isTouched) return;\n    if (!('touches' in event)) event.preventDefault();\n    const x = 'touches' in event ? event.touches[0].clientX : event.clientX;\n    const y = 'touches' in event ? event.touches[0].clientY : event.clientY;\n    this.position.set(x, y);\n    console.log({ x, y });\n    const normalizedDeviceCoord = Mouse.transformToNormalizedDeviceCoord(\n      this.position,\n      this.resolution\n    );\n    const _x = normalizedDeviceCoord.x;\n    const _y = normalizedDeviceCoord.y;\n    console.log({ _x, _y });\n  }\n\n  touchEnd(event) {\n    console.log(event);\n    this.isTouched = false;\n  }\n\n  resize(resolution) {\n    this.resolution = resolution;\n  }\n\n  update() {\n    if (!this.isDumping) return;\n  }\n}\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nexport default class Camera extends THREE.PerspectiveCamera {\n  constructor(options = {}) {\n    super(options?.fov, options?.aspect, options?.near, options?.far);\n    this.time = 0;\n    this.canControl = true;\n    if (!options?.canvas) return;\n    if (!this.canControl) return;\n    this.controls = new OrbitControls(this, options?.canvas);\n    this.controls.enableDamping = options?.enableDamping || false;\n    this.controls.dampingFactor = options?.dampingFactor ?? 0.2;\n  }\n\n  init() {\n    this.position.set(-5, 5, 20);\n    this.lookAt(new THREE.Vector3(0, 0, 0));\n  }\n\n  resize(resolution) {\n    this.aspect = resolution.x / resolution.y;\n    this.updateProjectionMatrix();\n  }\n\n  update(deltaTime) {\n    this.time += deltaTime;\n\n    this.controls.update();\n  }\n}\n","export const MathFunc = {\n  /**\n   * Returns value clamped to the inclusive range of min and max.\n   * @param {number} value The value to be clamped.\n   * @param {number} min The lower bound of the result.\n   * @param {number} max The upper bound of the result.\n   * @returns value if min ≤ value ≤ max.\n   *    -or-\n   *    min if value < min.\n   *    -or-\n   *    max if max < value.\n   */\n  clamp: (value, min, max) => Math.max(min, Math.min(max, value)),\n\n  lerp: (value, a, b) => {\n    return (1 - value) * a + value * b;\n  },\n};\n","import * as THREE from 'three';\nimport cowVertex from '../../shader/cow/vertex.vert';\nimport cowFragment from '../../shader/cow/fragment.frag';\n\nexport default class Cow extends THREE.Group {\n  /**\n   *\n   * @param {THREE.Geometry} headGeometry\n   * @param {THREE.Geometry} jawGeometry\n   * @param { Object } textures\n   */\n  constructor(geometry, textures) {\n    super();\n    this.name = 'cow';\n    this.time = 0;\n    this.isActive = false;\n    this.noiseTexture = textures.noise;\n    this.material = this.createMaterial();\n    this.cow = new THREE.Mesh(geometry, this.material);\n\n    this.createAttribute();\n    this.cow.geometry.computeVertexNormals();\n    this.cow.geometry.elementsNeedUpdate = true;\n    this.cow.rotateY(Math.PI / 2);\n    this.add(this.cow);\n    console.log(this.cow);\n  }\n\n  createAttribute() {\n    const geometry = this.cow.geometry;\n    const position = geometry.getAttribute('position').array;\n    const center = [];\n    const delay = [];\n\n    for (let i = 0; i < position.length; i += 9) {\n      const x1 = position[i];\n      const y1 = position[i + 1];\n      const z1 = position[i + 2];\n      const x2 = position[i + 3];\n      const y2 = position[i + 4];\n      const z2 = position[i + 5];\n      const x3 = position[i + 6];\n      const y3 = position[i + 7];\n      const z3 = position[i + 8];\n\n      const centerX = (x1 + x2 + x3) / 3;\n      const centerY = (y1 + y2 + y3) / 3;\n      const centerZ = (z1 + z2 + z3) / 3;\n\n      center.push(\n        centerX,\n        centerY,\n        centerZ,\n        centerX,\n        centerY,\n        centerZ,\n        centerX,\n        centerY,\n        centerZ\n      );\n\n      const delayValue = Math.random() * 0.5;\n      delay.push(delayValue, delayValue, delayValue);\n    }\n\n    geometry.setAttribute(\n      'center',\n      new THREE.Float32BufferAttribute(center, 3)\n    );\n\n    geometry.setAttribute('delay', new THREE.Float32BufferAttribute(delay, 1));\n  }\n\n  setNoiseTexture(texture) {\n    this.noiseTexture = texture;\n  }\n\n  createMaterial() {\n    const material = new THREE.RawShaderMaterial({\n      vertexShader: cowVertex,\n      fragmentShader: cowFragment,\n      uniforms: {\n        time: {\n          value: 0,\n        },\n        noiseTexture: {\n          value: this.noiseTexture,\n        },\n      },\n      // wireframe: true,\n    });\n\n    return material;\n  }\n\n  update(deltaTime) {\n    this.time += deltaTime;\n    this.cow.material.uniforms.time.value = this.time;\n  }\n}\n","export default \"#define GLSLIFY 1\\nattribute float delay;\\nattribute vec2 uv;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 faceNormal;\\nattribute vec3 center;\\n\\nuniform float time;\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\n\\nvarying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nvarying float vOneToZero;\\n\\nfloat PI = 3.141592653589793238;\\n\\nfloat duration = 3.0;\\n\\nfloat exponentialIn(float t) {\\n  return t == 0.0 ? t : pow(2.0, 10.0 * (t - 1.0));\\n}\\n\\nmat4 calcTranslateMat4(vec3 v) {\\n  return mat4(\\n    1.0, 0.0, 0.0, 0.0,\\n    0.0, 1.0, 0.0, 0.0,\\n    0.0, 0.0, 1.0, 0.0,\\n    v.x, v.y, v.z, 1.0\\n  );\\n}\\n\\nmat4 calcRotateMat4X(float radian) {\\n  return mat4(\\n    1.0, 0.0, 0.0, 0.0,\\n    0.0, cos(radian), -sin(radian), 0.0,\\n    0.0, sin(radian), cos(radian), 0.0,\\n    0.0, 0.0, 0.0, 1.0\\n  );\\n}\\n\\nmat4 calcRotateMat4Y(float radian) {\\n  return mat4(\\n    cos(radian), 0.0, sin(radian), 0.0,\\n    0.0, 1.0, 0.0, 0.0,\\n    -sin(radian), 0.0, cos(radian), 0.0,\\n    0.0, 0.0, 0.0, 1.0\\n  );\\n}\\n\\nmat4 calcRotateMat4Z(float radian) {\\n  return mat4(\\n    cos(radian), -sin(radian), 0.0, 0.0,\\n    sin(radian), cos(radian), 0.0, 0.0,\\n    0.0, 0.0, 1.0, 0.0,\\n    0.0, 0.0, 0.0, 1.0\\n  );\\n}\\n\\nmat4 calcRotateMat4(vec3 radian) {\\n  return calcRotateMat4X(radian.x) * calcRotateMat4Y(radian.y) * calcRotateMat4Z(radian.z);\\n}\\n\\nvoid main() {\\n  float oneToZero = clamp(exponentialIn((duration - time  - delay * 2.0 ) / duration) , 0.0, 1.0);\\n  mat4 translateMat = calcTranslateMat4(vec3(oneToZero * 100.0) * normal);\\n\\n  float rotateRadian = radians((normal.x + normal.y) * 320.0 * 12.0);\\n  mat4 rotateMat = calcRotateMat4(vec3(0.0, rotateRadian * oneToZero, 0.0));\\n\\n  mat4 rotateSelfMat = calcRotateMat4(vec3(0.0, time, 0.0));\\n\\n  vec4 updatePosition = rotateMat * translateMat * vec4(position, 1.0);\\n  gl_Position = projectionMatrix * modelViewMatrix * rotateSelfMat * updatePosition;\\n\\n  vUv = uv;\\n  vNormal = normal;\\n  vOneToZero = oneToZero;\\n}\\n\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform float time;\\nuniform sampler2D noiseTexture;\\n// uniform vec4 resolution;\\n\\nvarying vec2 vUv;\\nvarying vec3 vNormal;\\nvarying float vOneToZero;\\n\\nvec3 convertHsvToRgb(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nfloat PI = 3.141592653589793238;\\n\\nvoid main() {\\n  vec3 directionLight1 = vec3(1.0, 1.0, -2.0);\\n  float directionColor1 = dot(normalize(directionLight1), normalize(vNormal));\\n\\n  vec3 directionLight2 = vec3(-1.0, 1.0, 2.0);\\n  float directionColor2 = dot(normalize(directionLight2), normalize(vNormal));\\n\\n  vec3 gamingColor = vec3(time * 0.75, .5, 1.0);\\n  vec3 color = convertHsvToRgb(gamingColor);\\n\\n  vec3 finalColor = color * directionColor1 * directionColor2 + vec3(0.5);\\n\\n  float opacity =  vOneToZero;\\n\\n  gl_FragColor = vec4(finalColor, opacity);\\n}\\n\";","import * as THREE from 'three';\n\nimport bgVert from '../../shader/background/vertex.vert';\nimport bgFrag from '../../shader/background/fragment.frag';\n\nexport default class BackGround extends THREE.Mesh {\n  constructor() {\n    const geometry = new THREE.SphereBufferGeometry(100, 12, 12);\n    const material = new THREE.RawShaderMaterial({\n      uniforms: {\n        time: {\n          value: 0,\n        },\n        isTurnedOn: {\n          value: 0,\n        },\n      },\n      vertexShader: bgVert,\n      fragmentShader: bgFrag,\n      side: THREE.BackSide,\n    });\n\n    super(geometry, material);\n    this.time = 0;\n    this.isTurnedOn = 0;\n  }\n\n  update(deltaTime) {\n    this.time += deltaTime;\n\n    this.material.uniforms.time.value = this.time;\n    this.material.uniforms.isTurnedOn.value = this.isTurnedOn;\n  }\n}\n","export default \"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec2 uv;\\n\\nuniform float time;\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\n\\nvarying vec2 vUv;\\nvarying vec3 vColor;\\n\\nvec3 convertHsvToRgb(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nfloat PI = 3.141592653589793238;\\n\\nvoid main() {\\n  vec2 p = uv * 2.0 - 1.0;\\n   vec3 hsv = vec3(\\n    p.y * 0.1 + 0.07,\\n    1.0,\\n    0.9\\n  );\\n  vec3 rgb = convertHsvToRgb(hsv);\\n  vUv = uv;\\n  vColor = rgb;\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform float time;\\n\\nvarying vec2 vUv;\\nvarying vec3 vColor;\\n\\nfloat PI = 3.141592653589793238;\\n\\nvoid main() {\\n\\n  gl_FragColor = vec4(vec3(vColor), 1.0);\\n}\\n\";","import * as THREE from 'three';\nimport { OBJLoader2 } from 'three/examples/jsm/loaders/OBJLoader2';\nimport Camera from './Camera';\nimport { MathFunc } from '../utils/Utils';\n\nimport Cow from './Cow';\nimport BackGround from './BackGround';\n\nexport default class WebGlContents {\n  /**\n   *\n   * @param {HTMLCanvasElement} canvas\n   * @param {THREE.Vector2} resolution\n   */\n  constructor(canvas, resolution) {\n    this.renderer = new THREE.WebGLRenderer({\n      canvas,\n      alpha: true,\n      antialias: true,\n    });\n    this.renderer.setPixelRatio(MathFunc.clamp(window.devicePixelRatio, 1, 2));\n    this.renderer.setClearColor(0x000000, 1.0);\n    this.renderer.setSize(resolution.x, resolution.y);\n    this.scene = new THREE.Scene();\n    this.camera = new Camera({\n      fov: 50,\n      aspect: resolution.x / resolution.y,\n      far: 1000,\n      canvas,\n      enableDamping: true,\n    });\n\n    this.cow = null;\n    this.background = null;\n  }\n\n  async load() {\n    const { geometries, textures } = await this.fetchObjects();\n\n    const noiseTexture = textures.noise;\n\n    noiseTexture.wrapS = THREE.RepeatWrapping;\n    noiseTexture.wrapT = THREE.RepeatWrapping;\n\n    this.camera.init();\n    this.cow = new Cow(geometries.cow, textures);\n    this.background = new BackGround();\n    this.scene.add(this.cow);\n    this.scene.add(this.background);\n  }\n\n  async fetchObjects() {\n    const textureLoader = new THREE.TextureLoader();\n    const objLoader = new OBJLoader2();\n\n    return await Promise.all([\n      objLoader.loadAsync('/public/model/cow.obj'),\n      textureLoader.loadAsync('/public/images/textures/noise.png'),\n    ]).then((response) => {\n      console.log(response[0]);\n      const objChildren = response[0].children;\n      const { geometry: cow } = objChildren[0];\n\n      const noiseTexture = response[1];\n      const geometries = { cow };\n      const textures = { noise: noiseTexture };\n\n      return { geometries, textures };\n    });\n  }\n\n  render(deltaTime) {\n    this.camera.update(deltaTime);\n\n    this.cow.update(deltaTime);\n\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  touchStart(e) {}\n\n  touchMove(e) {}\n\n  touchEnd(e) {}\n\n  wheel(e) {}\n\n  resize(resolution) {\n    this.resolution = resolution;\n    this.camera.resize(resolution);\n\n    this.renderer.setSize(resolution.x, resolution.y);\n  }\n}\n","import App from './webGl';\n\nconst index = () => {\n  new App();\n};\nindex();\n","import Mouse from './Mouse';\nimport WebGlContents from './WebGlContents';\n\nimport * as THREE from 'three';\n\nexport default class Index {\n  constructor() {\n    this.canvas = document.querySelector('#canvas');\n    if (!this.canvas) throw new Error('canvas element not found');\n    this.resolution = new THREE.Vector2(\n      document.body.clientWidth,\n      window.innerHeight\n    );\n\n    this.clock = new THREE.Clock(true);\n    this.mouse = new Mouse(this.resolution);\n    this.webGlContent = new WebGlContents(this.canvas, this.resolution);\n    // this.mouse.canHover = true;\n    this.init();\n    this.bind();\n  }\n\n  render(deltaTime) {\n    this.webGlContent.render(deltaTime);\n  }\n\n  animate() {\n    const deltaTime = this.clock.getDelta();\n    this.time += deltaTime;\n    this.render(deltaTime);\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  // touchStart(event) {\n  //   this.mouse.touchStart(event);\n  //   this.webGlContent.touchStart(event);\n  // }\n  // touchMove(event) {\n  //   this.mouse.touchMove(event);\n  //   this.webGlContent.touchMove(event);\n  // }\n  // touchEnd(event) {\n  //   this.mouse.touchEnd(event);\n  //   this.webGlContent.touchEnd(event);\n  // }\n  // wheel(event) {\n  //   this.webGlContent.wheel(event);\n  // }\n  resize() {\n    this.resolution.set(document.body.clientWidth, window.innerHeight);\n    const resolution = this.resolution;\n    this.mouse.resize(resolution);\n    this.webGlContent.resize(resolution);\n  }\n\n  bind() {\n    // window.addEventListener('mousedown', this.touchStart.bind(this));\n    // window.addEventListener('mousemove', this.touchMove.bind(this));\n    // window.addEventListener('mouseup', this.touchEnd.bind(this));\n    // window.addEventListener('touchstart', this.touchStart.bind(this));\n    // window.addEventListener('touchmove', this.touchMove.bind(this));\n    // window.addEventListener('touchend', this.touchEnd.bind(this));\n    // window.addEventListener('wheel', this.wheel.bind(this));\n    window.addEventListener('resize', this.resize.bind(this));\n  }\n\n  start() {\n    this.bind();\n    this.animate();\n  }\n\n  async init() {\n    await this.webGlContent.load();\n\n    document.querySelector('.js-loading').classList.remove('is-active');\n\n    this.start();\n  }\n}\n"],"sourceRoot":""}